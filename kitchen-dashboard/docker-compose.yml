services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kitchen-postgres
    environment:
      POSTGRES_DB: kitchen_db
      POSTGRES_USER: kitchen_user
      POSTGRES_PASSWORD: kitchen_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kitchen-network
    restart: unless-stopped

  # NestJS Backend API Server
  nestjs-backend:
    build:
      context: ./nestjs-backend
      dockerfile: Dockerfile
    container_name: kitchen-nestjs-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - RABBITMQ_URL=${RABBITMQ_URL:-amqp://rabbitmq:5672}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=kitchen_user
      - DB_PASSWORD=kitchen_pass
      - DB_NAME=kitchen_db
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - kitchen-network
    restart: unless-stopped

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: kitchen-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - kitchen-network
    restart: unless-stopped

  # Frontend Web Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kitchen-frontend
    ports:
      - "3001:3001"
    environment:
      - BACKEND_URL=http://nestjs-backend:3000
    depends_on:
      - nestjs-backend
    networks:
      - kitchen-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kitchen-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kitchen.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - kitchen-network
    restart: unless-stopped
    depends_on:
      - postgres

networks:
  kitchen-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
